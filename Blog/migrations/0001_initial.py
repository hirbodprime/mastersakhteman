# Generated by Django 4.0.1 on 2023-08-10 10:03

import Blog.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_resized.forms
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0005_auto_20220424_2025'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BlogTitle', models.CharField(max_length=200)),
                ('Slug', models.SlugField(allow_unicode=True, blank=True, null=True)),
                ('BlogImageMain', models.ImageField(blank=True, null=True, upload_to=Blog.models.upload_image_path)),
                ('BlogImage1', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', keep_meta=True, null=True, quality=99, size=[500, 300], upload_to=Blog.models.upload_image_path)),
                ('BlogImage2', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', keep_meta=True, null=True, quality=99, size=[500, 300], upload_to=Blog.models.upload_image_path)),
                ('BlogImage3', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', keep_meta=True, null=True, quality=99, size=[500, 300], upload_to=Blog.models.upload_image_path)),
                ('BlogImage4', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', keep_meta=True, null=True, quality=99, size=[500, 300], upload_to=Blog.models.upload_image_path)),
                ('BlogImage5', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', keep_meta=True, null=True, quality=99, size=[500, 300], upload_to=Blog.models.upload_image_path)),
                ('Blog_Created_At', models.DateTimeField(auto_now_add=True)),
                ('Blog_Updated_At', models.DateTimeField(auto_now=True)),
                ('BlogBody1', models.TextField(blank=True, max_length=1200, null=True)),
                ('BlogBody2', models.TextField(blank=True, max_length=1700, null=True)),
                ('BlogBody3', models.TextField(blank=True, max_length=1700, null=True)),
                ('BlogBody4', models.TextField(blank=True, max_length=1200, null=True)),
                ('BlogBody5', models.TextField(blank=True, max_length=1200, null=True)),
                ('Blogquote', models.TextField(blank=True, max_length=1200, null=True)),
                ('Blogquestion1', models.CharField(blank=True, max_length=100, null=True)),
                ('Blogquestion2', models.CharField(blank=True, max_length=100, null=True)),
                ('Blogquestion3', models.CharField(blank=True, max_length=100, null=True)),
                ('Blogquestion4', models.CharField(blank=True, max_length=100, null=True)),
                ('Blogquestion5', models.CharField(blank=True, max_length=100, null=True)),
                ('vip', models.BooleanField(blank=True, default=False, null=True)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('writer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ModelComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('content', models.TextField(max_length=1000)),
                ('commentposted', models.DateTimeField(auto_now_add=True)),
                ('accepted', models.BooleanField(default=False)),
                ('motherpost', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Blog.blogmodel')),
            ],
        ),
    ]
